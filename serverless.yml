service: vision

provider:
  name: aws
  stackTags:
    serverless: framework
  runtime: nodejs14.x
  iam:
    role: arn:aws:iam::#{AWS::AccountId}:role/SlsFrmWrk_Amplify_Dev_Role
  logs:
    httpApi:
      format: '{
  "requestId": "$context.requestId",
  "ip": "$context.identity.sourceIp",
  "requestTime": "$context.requestTime",
  "httpMethod": "$context.httpMethod",
  "routeKey": "$context.routeKey",
  "status": "$context.status",
  "protocol": "$context.protocol",
  "responseLength": "$context.responseLength",
  "integrationError": "$context.integrationErrorMessage"
}'

  httpApi:
    cors: true
    authorizers:
      visionApiAuthorizer:
        identitySource: $request.header.Authorization
        issuerUrl:
          Fn::Join:
            - ''
            - - 'https://cognito-idp.'
              - 'us-east-1'
              - '.amazonaws.com/'
              - Ref: CognitoUserPoolVisionUserPool
        audience: !Ref CognitoUserPoolClient
  environment:
    DOMAIN_SUFFIX: djklagqewryuias14sd678

plugins:
  - serverless-webpack
  - serverless-prune-plugin
  - serverless-cloudformation-sub-variables

functions:
  create: ${file(src/functions/create/function.yml):create}
  delete: ${file(src/functions/delete/function.yml):delete}
  get: ${file(src/functions/get/function.yml):get}
  update: ${file(src/functions/update/function.yml):update}
  autoConfirm: ${file(src/functions/autoConfirm/function.yml):autoConfirm}
  postConfirm: ${file(src/functions/postConfirm/function.yml):postConfirm}

custom:
  webpack:
    includeModules:
      forceExclude:
        - aws-sdk
  prune:
    automatic: true
    number: 2

package:
  individually: true

resources:
  - ${file(src/resources/resources.yml)}
